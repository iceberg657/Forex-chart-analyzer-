
import { GoogleGenAI } from "@google/genai";
import { BotLanguage } from '../types';

export default async function handler(req: any, res: any) {
    if (req.method !== 'POST') {
        res.setHeader('Allow', ['POST']);
        return res.status(405).end(`Method ${req.method} Not Allowed`);
    }

    if (!process.env.API_KEY) {
        return res.status(500).json({ error: "API Key not configured on the server." });
    }

    try {
        const { description, language }: { description: string; language: BotLanguage; } = req.body;
        
        if (!description || !language) {
            return res.status(400).json({ error: "Description and language are required." });
        }
        
        const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });
        const prompt = `You are an expert MQL developer. Your task is to generate the code for a trading bot (Expert Advisor) based on the user's description.
- Language: ${language}
- User Description of desired behavior: "${description}"
IMPORTANT: At the very top of the generated code, you MUST include the following MQL properties:
#property copyright "Generated by Grey Algo Apex Trader"
#property link      "https://greyalgo-trading.netlify.app"
#property description "Also visit Quant Systems Trading: https://quant-systems-trading.netlify.app"
After these properties, generate the complete, functional, and well-commented ${language} code. The code must be ready to be compiled in MetaEditor. Respond with ONLY the raw code, without any surrounding text, explanations, or markdown code blocks.`;

        const response = await ai.models.generateContent({ model: 'gemini-2.5-flash', contents: prompt });
        
        res.setHeader('Content-Type', 'text/plain');
        res.status(200).send(response.text);

    } catch (error: any) {
        console.error("Error in /api/createBot:", error);
        res.status(500).json({ error: "API request failed", details: error.message });
    }
}
